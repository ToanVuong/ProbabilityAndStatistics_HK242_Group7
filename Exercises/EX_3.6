import itertools

# Liệt kê tất cả kết quả của 3 lần tung đồng xu (0=Tails, 1=Heads)
outcomes = list(itertools.product([0, 1], repeat=3))

# Định nghĩa biến cố A1, A2, A3
event_A1 = [o for o in outcomes if o[0] == 1]  # Lần 1 ra Ngửa
event_A2 = [o for o in outcomes if o[1] == 1]  # Lần 2 ra Ngửa
event_A3 = [o for o in outcomes if o[2] == 1]  # Lần 3 ra Ngửa

# Tính xác suất từng biến cố
prob_A1 = len(event_A1) / len(outcomes)
prob_A2 = len(event_A2) / len(outcomes)
prob_A3 = len(event_A3) / len(outcomes)

# Tính xác suất giao đôi
event_A1_A2 = [o for o in outcomes if o[0] == 1 and o[1] == 1]
event_A1_A3 = [o for o in outcomes if o[0] == 1 and o[2] == 1]
event_A2_A3 = [o for o in outcomes if o[1] == 1 and o[2] == 1]

prob_A1_A2 = len(event_A1_A2) / len(outcomes)
prob_A1_A3 = len(event_A1_A3) / len(outcomes)
prob_A2_A3 = len(event_A2_A3) / len(outcomes)

# Tính xác suất giao ba
event_A1_A2_A3 = [o for o in outcomes if o[0] == 1 and o[1] == 1 and o[2] == 1]
prob_A1_A2_A3 = len(event_A1_A2_A3) / len(outcomes)

# In kết quả
print(f"P(A1) = {prob_A1}")
print(f"P(A2) = {prob_A2}")
print(f"P(A3) = {prob_A3}\n")

print(f"P(A1 ∩ A2) = {prob_A1_A2} vs P(A1)P(A2) = {prob_A1 * prob_A2}")
print(f"P(A1 ∩ A3) = {prob_A1_A3} vs P(A1)P(A3) = {prob_A1 * prob_A3}")
print(f"P(A2 ∩ A3) = {prob_A2_A3} vs P(A2)P(A3) = {prob_A2 * prob_A3}\n")

print(f"P(A1 ∩ A2 ∩ A3) = {prob_A1_A2_A3} vs P(A1)P(A2)P(A3) = {prob_A1 * prob_A2 * prob_A3}")
